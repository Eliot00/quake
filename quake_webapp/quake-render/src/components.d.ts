/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { QuakeDownType } from "./markdown/quake-down.type";
import { Link } from "./components/quake-render/quake-render";
export namespace Components {
    interface EmbedLink {
        "entryId": number;
        "entryType": string;
    }
    interface FetchNext {
        "data": any;
        "method": String;
        "searchEngine": boolean;
        "url": String;
    }
    interface GraphBar {
        "config": any;
        "data": QuakeDownType.Table;
    }
    interface GraphNetwork {
        "config": any;
        "data": any;
    }
    interface QuakeRender {
        "content": string;
        "hasEmbed": boolean;
    }
}
declare global {
    interface HTMLEmbedLinkElement extends Components.EmbedLink, HTMLStencilElement {
    }
    var HTMLEmbedLinkElement: {
        prototype: HTMLEmbedLinkElement;
        new (): HTMLEmbedLinkElement;
    };
    interface HTMLFetchNextElement extends Components.FetchNext, HTMLStencilElement {
    }
    var HTMLFetchNextElement: {
        prototype: HTMLFetchNextElement;
        new (): HTMLFetchNextElement;
    };
    interface HTMLGraphBarElement extends Components.GraphBar, HTMLStencilElement {
    }
    var HTMLGraphBarElement: {
        prototype: HTMLGraphBarElement;
        new (): HTMLGraphBarElement;
    };
    interface HTMLGraphNetworkElement extends Components.GraphNetwork, HTMLStencilElement {
    }
    var HTMLGraphNetworkElement: {
        prototype: HTMLGraphNetworkElement;
        new (): HTMLGraphNetworkElement;
    };
    interface HTMLQuakeRenderElement extends Components.QuakeRender, HTMLStencilElement {
    }
    var HTMLQuakeRenderElement: {
        prototype: HTMLQuakeRenderElement;
        new (): HTMLQuakeRenderElement;
    };
    interface HTMLElementTagNameMap {
        "embed-link": HTMLEmbedLinkElement;
        "fetch-next": HTMLFetchNextElement;
        "graph-bar": HTMLGraphBarElement;
        "graph-network": HTMLGraphNetworkElement;
        "quake-render": HTMLQuakeRenderElement;
    }
}
declare namespace LocalJSX {
    interface EmbedLink {
        "entryId"?: number;
        "entryType"?: string;
    }
    interface FetchNext {
        "data"?: any;
        "method"?: String;
        "onFetchSuccess"?: (event: CustomEvent<any>) => void;
        "searchEngine"?: boolean;
        "url"?: String;
    }
    interface GraphBar {
        "config"?: any;
        "data"?: QuakeDownType.Table;
    }
    interface GraphNetwork {
        "config"?: any;
        "data"?: any;
    }
    interface QuakeRender {
        "content"?: string;
        "hasEmbed"?: boolean;
        "onClickEmbedLink"?: (event: CustomEvent<Link>) => void;
        "onClickPageLink"?: (event: CustomEvent<Link>) => void;
    }
    interface IntrinsicElements {
        "embed-link": EmbedLink;
        "fetch-next": FetchNext;
        "graph-bar": GraphBar;
        "graph-network": GraphNetwork;
        "quake-render": QuakeRender;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "embed-link": LocalJSX.EmbedLink & JSXBase.HTMLAttributes<HTMLEmbedLinkElement>;
            "fetch-next": LocalJSX.FetchNext & JSXBase.HTMLAttributes<HTMLFetchNextElement>;
            "graph-bar": LocalJSX.GraphBar & JSXBase.HTMLAttributes<HTMLGraphBarElement>;
            "graph-network": LocalJSX.GraphNetwork & JSXBase.HTMLAttributes<HTMLGraphNetworkElement>;
            "quake-render": LocalJSX.QuakeRender & JSXBase.HTMLAttributes<HTMLQuakeRenderElement>;
        }
    }
}
